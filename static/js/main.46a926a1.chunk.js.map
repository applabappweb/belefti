{"version":3,"sources":["logo.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","earnings","setEarnings","useEffect","axios","get","then","res","data","catch","err","console","log","tot","totalUnpaid","act","Date","now","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","className","src","logo","alt","style","color","parseFloat","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,MAA0B,iC,eC6B1BA,MAxBf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACEC,qBAAU,WAAKC,IAAMC,IAAI,kGAAkGC,MAAK,SAAAC,GAAG,OAAEL,EAAYK,EAAIC,SAAOC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,QAAQ,IAC3L,IAAMG,EAAIZ,EAASa,YACbC,EAAM,IAAIC,KACVC,EAAG,UAAKF,EAAIG,UAAT,YAAsBH,EAAII,WAAW,EAArC,YAA0CJ,EAAIK,cAA9C,kBAAmEL,EAAIM,WAAa,GAAI,IAAI,IAAMN,EAAIM,WAAtG,aAAsHN,EAAIO,aAAe,GAAI,IAAI,IAAMP,EAAIO,aAA3J,aAA6KP,EAAIQ,aAAe,GAAI,IAAI,IAAMR,EAAIQ,cAC7N,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,4CACA,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,6BAAKV,IACL,6DACiC,sBAAMW,MAAO,CAACC,MAAO,SAArB,SAAgCC,WAAWjB,GAAKkB,QAAQ,QAEzF,4EAC4C,uBAAMH,MAAO,CAACC,MAAO,OAArB,UAA+BC,WAAe,IAAJjB,GAAUkB,QAAQ,GAA5D,iBCTrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.46a926a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.689b0658.jpg\";","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport logo from './logo.jpg';\nimport './App.css';\n\nfunction App() {\n  const [earnings, setEarnings] = useState([])\n    useEffect(()=>{axios.get(\"https://hiveon.net/api/v1/stats/miner/1ad68e074d71c8fc6abe15187173767101d4c26e/ETH/billing-acc\").then(res=>setEarnings(res.data)).catch(err=>console.log(err))}, [])\n    const tot=earnings.totalUnpaid;\n    const act = new Date(); \n    const now =`${act.getDate()}/${act.getMonth()+1}/${act.getFullYear()} Ã  ${((act.getHours() < 10)?\"0\":\"\") + act.getHours()}:${((act.getMinutes() < 10)?\"0\":\"\") + act.getMinutes()}:${((act.getSeconds() < 10)?\"0\":\"\") + act.getSeconds()}`;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Mohamed HM</h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h3>{now}</h3>\n        <h4>\n          {`La valeur actuelle est de: `}<span style={{color: \"green\"}}>{parseFloat(tot).toFixed(5)}</span>\n        </h4>\n        <h5>\n          Le pourcentage pour atteindre 0.1 est de: <span style={{color: \"red\"}}>{(parseFloat(tot*1000).toFixed(2))} %</span>\n        </h5>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}