{"version":3,"sources":["logo.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","totalUnpaids","setTotalUnpaids","pricesUSD","setPricesUSD","pricesEUR","setPricesEUR","times","setTimes","getData","a","axios","get","totalUnpaid","data","priceUSD","price","priceEUR","console","error","message","getTime","Date","newDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","useEffect","interval1","setInterval","interval2","clearInterval","className","style","color","src","logo","alt","cursor","onClick","window","location","reload","parseFloat","toFixed","Circle","label","value","text","styles","buildStyles","textColor","pathColor","trailColor","props","marginTop","display","width","height","children","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9261b37f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.689b0658.jpg\";","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport {\n  CircularProgressbar,\n  buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nimport logo from './logo.jpg';\nimport './App.css';\n\nfunction App() {\n  const [totalUnpaids, setTotalUnpaids] = useState([])\n  const [pricesUSD, setPricesUSD] = useState([])\n  const [pricesEUR, setPricesEUR] = useState([])\n  const [times, setTimes] = useState([])\n\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n  const getData = async () => {\n    try {\n\n      const totalUnpaid = await axios.get(\"https://hiveon.net/api/v1/stats/miner/1ad68e074d71c8fc6abe15187173767101d4c26e/ETH/billing-acc\")  \n      setTotalUnpaids(totalUnpaid.data.totalUnpaid);\n\n      const priceUSD = await axios.get(\"https://api.ethereumdb.com/v1/ticker?pair=ETH-USD&range=1h\")\n      setPricesUSD(priceUSD.data.price);\n\n      const priceEUR = await axios.get(\"https://api.ethereumdb.com/v1/ticker?pair=ETH-EUR&range=1h\")\n      setPricesEUR(priceEUR.data.price);\n    \n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTime = async() => {try {\n    const newDate = await new Date(); \n    setTimes(`${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()} - ${((newDate.getHours() < 10)?\"0\":\"\") + newDate.getHours()}:${((newDate.getMinutes() < 10)?\"0\":\"\") + newDate.getMinutes()}:${((newDate.getSeconds() < 10)?\"0\":\"\") + newDate.getSeconds()}`);\n\n  } catch (err) {\n    console.error(err.message);\n  }}\n\n  useEffect(()=>{\n    getData()\n    getTime()\n\n    const interval1=setInterval(()=>{\n      getTime()\n    },1000)\n\n    const interval2=setInterval(()=>{\n      getData()\n      \n    },60000)   \n       \n    return()=>{clearInterval(interval1); clearInterval(interval2)}}, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 style={{color: \"#c1aea8\"}}>Mohamed HM</h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" style={{cursor:\"pointer\"}} onClick={()=>refreshPage()}/>\n        <p>{times}</p>\n\n          <p><span style={{color: \"#e4d06e\"}}>  ${(parseFloat(pricesUSD).toFixed(2))} | £{(parseFloat(pricesEUR).toFixed(2))}</span></p>\n\n          <Circle label=\"\">\n            <CircularProgressbar\n              value={(parseFloat(totalUnpaids*1000).toFixed(2))}\n              text={`${(parseFloat(totalUnpaids*1000).toFixed(2))}%`}\n              styles={buildStyles({\n                textColor: \"#d46565\",\n                pathColor: \"#941717\",\n                trailColor: \"#c1aea8\"\n              })}\n            />\n          </Circle>\n\n          <p><span style={{color: \"#e4d06e\"}}>${(parseFloat(pricesUSD*totalUnpaids).toFixed(2))}</span> | <span style={{color: \"#d46565\"}}>{(parseFloat(pricesUSD*totalUnpaids*182).toFixed(2))}DA</span> | <span style={{color: \"#e4d06e\"}}>£{(parseFloat(pricesEUR*totalUnpaids).toFixed(2))}</span></p>\n          \n\n      </header>\n      \n    </div>\n  );\n\n  function Circle(props) {\n    return (\n      <div style={{ marginTop: 20, display: \"block\", width: 100 }}>\n        <div style={{ height: \"30%\" }}>{props.children}</div>\n        <div style={{ height: \"70%\" }}>\n          <h3 className=\"h5\">{props.label}</h3>\n          <p>{props.description}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}