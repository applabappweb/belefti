{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","totalUnpaids","setTotalUnpaids","totalPaids","setTotalPaids","pricesUSD","setPricesUSD","pricesEUR","setPricesEUR","times","setTimes","getData","a","axios","get","totalUnpaid","data","totalPaid","console","error","message","getEth","priceUSD","price","priceEUR","getTime","Date","newDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","useEffect","interval1","setInterval","interval2","clearInterval","className","style","cursor","onClick","window","location","reload","Circle","Circle100","Number","isNaN","parseFloat","value","toFixed","strokeWidth","styles","buildStyles","strokeLinecap","pathColor","trailColor","width","Circle10","text","textColor","color","paddingRight","height","numberWithCommas","props","display","justifyContent","alignItems","marginTop","marginBottom","children","position","zIndex","x","toString","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eded643.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport {\n  CircularProgressbar,\n  buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nimport './App.css';\n\nfunction App() {\n  const [totalUnpaids, setTotalUnpaids] = useState([])\n  const [totalPaids, setTotalPaids] = useState([])\n  const [pricesUSD, setPricesUSD] = useState([])\n  const [pricesEUR, setPricesEUR] = useState([])\n  const [times, setTimes] = useState([])\n\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n  const getData = async () => {\n    try {\n\n      const totalUnpaid = await axios.get(\"https://hiveon.net/api/v1/stats/miner/1ad68e074d71c8fc6abe15187173767101d4c26e/ETH/billing-acc\")\n      setTotalUnpaids(totalUnpaid.data.totalUnpaid);\n      setTotalPaids(totalUnpaid.data.totalPaid);\n\n      // const priceUSD = await axios.get(\"https://api.ethereumdb.com/v1/ticker?pair=ETH-USD&range=1h\")\n      // setPricesUSD(priceUSD.data.price);\n\n      // const priceEUR = await axios.get(\"https://api.ethereumdb.com/v1/ticker?pair=ETH-EUR&range=1h\")\n      // setPricesEUR(priceEUR.data.price);\n    \n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getEth = async () => {\n    try {\n\n      const priceUSD = await axios.get(\"https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT\")\n      setPricesUSD(priceUSD.data.price);\n\n      const priceEUR = await axios.get(\"https://api.binance.com/api/v3/ticker/price?symbol=ETHEUR\")\n      setPricesEUR(priceEUR.data.price);\n    \n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTime = async() => {try {\n    const newDate = await new Date(); \n    setTimes(`${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()} - ${((newDate.getHours() < 10)?\"0\":\"\") + newDate.getHours()}:${((newDate.getMinutes() < 10)?\"0\":\"\") + newDate.getMinutes()}:${((newDate.getSeconds() < 10)?\"0\":\"\") + newDate.getSeconds()}`);\n\n  } catch (err) {\n    console.error(err.message);\n  }}\n\n  useEffect(()=>{\n    getData()\n    getTime()\n\n    const interval1=setInterval(()=>{\n      getTime()\n      getEth()\n    },1000)\n\n    const interval2=setInterval(()=>{\n      getData()      \n    },30000)   \n       \n    return()=>{clearInterval(interval1); clearInterval(interval2)}}, [])\n\n    \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"heading-frame\" style={{cursor:\"pointer\"}} onClick={()=>refreshPage()}>\n          <span>Mohamed HM <br/>{times}</span>\n        </div>    \n\n        <Circle>\n          <Circle100>\n          {Number.isNaN(parseFloat(totalPaids))? <CircularProgressbar\n              value={(parseFloat(totalUnpaids*100).toFixed(2))}\n              strokeWidth={50}\n              styles={buildStyles({\n                strokeLinecap: \"butt\",\n                pathColor: \"#0d5a7f\",\n                trailColor: \"#333\",\n                width: \"80%\"\n              })}\n            />: <CircularProgressbar\n              value={(parseFloat((totalPaids+totalUnpaids)*100).toFixed(2))}\n              strokeWidth={50}\n              styles={buildStyles({\n                strokeLinecap: \"butt\",\n                pathColor: \"#0d5a7f\",\n                trailColor: \"#333\",\n                width: \"80%\"\n              })}\n            />}\n          </Circle100>\n\n          <Circle10>\n            <CircularProgressbar\n              value={(parseFloat(totalUnpaids*1000).toFixed(2))}\n              text={`${(parseFloat(totalUnpaids*1000).toFixed(2))}%`}\n              styles={buildStyles({\n                strokeLinecap: \"butt\",\n                textColor: \"#c1aea8\",\n                pathColor: \"#941717\",\n                trailColor: \"#c1aea8\"\n              })}\n            />\n          </Circle10>\n        </Circle>\n\n        {Number.isNaN(parseFloat(pricesUSD))? \"\": <p style={{color: \"#c1aea8\"}}>\n          <span className=\"iconify\" data-icon=\"mdi:ethereum\" style={{paddingRight: 5, height: 14}}></span><span style={{color: \"#6ee49d\"}}>{numberWithCommas(parseFloat(pricesUSD).toFixed(2))}$</span> | <span style={{color: \"#d46565\"}}>{numberWithCommas(parseFloat(pricesUSD*180).toFixed(2))}</span> | <span style={{color: \"#e4d06e\"}}>{numberWithCommas(parseFloat(pricesEUR).toFixed(2))}€</span>\n        </p>}\n\n        {Number.isNaN(parseFloat(pricesUSD))? \"\": <p style={{color: \"#c1aea8\"}}>\n        <span className=\"iconify\" data-icon=\"clarity:resource-pool-solid\" style={{paddingRight: 5, height: 13}}></span>\n        <span style={{color: \"#6ee49d\"}}>{numberWithCommas(parseFloat(pricesUSD*totalUnpaids).toFixed(2))}$</span> | <span style={{color: \"#d46565\"}}>{numberWithCommas(parseFloat(pricesUSD*totalUnpaids*180).toFixed(2))}</span> | <span style={{color: \"#e4d06e\"}}>{numberWithCommas(parseFloat(pricesEUR*totalUnpaids).toFixed(2))}€</span>\n        </p>}\n\n        {Number.isNaN(parseFloat(totalPaids))? \"\": <p style={{color: \"#c1aea8\"}}>\n          <span className=\"iconify\" data-icon=\"clarity:wallet-solid\" style={{paddingRight: 5, height: 13}}></span>\n          <span style={{color: \"#6ee49d\"}}>{numberWithCommas(parseFloat(pricesUSD*totalPaids).toFixed(2))}$</span> | <span style={{color: \"#d46565\"}}>{numberWithCommas(parseFloat(pricesUSD*totalPaids*180).toFixed(2))}</span> | <span style={{color: \"#e4d06e\"}}>{numberWithCommas(parseFloat(pricesEUR*totalPaids).toFixed(2))}€</span>\n        </p>}          \n\n      </header>\n      \n    </div>\n  );\n\n  function Circle(props) {\n    return (\n        <div style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"30%\",\n          width: 100,\n          marginTop: 20,\n          marginBottom: 20\n        }}>\n          {props.children}\n        </div>\n    );\n  }\n\n  function Circle100(props) {\n    return (\n        <div style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          position: \"absolute\",\n          width: 100\n        }}>\n          {props.children}\n        </div>\n    );\n  }\n\n  function Circle10(props) {\n    return (\n        <div style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          zIndex: 1\n        }}>\n          {props.children}\n        </div>\n    );\n  }\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}