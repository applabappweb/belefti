{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","totalUnpaids","setTotalUnpaids","totalPaids","setTotalPaids","pricesUSD","setPricesUSD","pricesEUR","setPricesEUR","times","setTimes","getData","a","axios","get","totalUnpaid","data","totalPaid","priceUSD","price","priceEUR","console","error","message","getTime","Date","newDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","useEffect","interval1","setInterval","interval2","clearInterval","className","style","color","cursor","onClick","window","location","reload","class","paddingRight","height","numberWithCommas","parseFloat","toFixed","Circle","label","value","text","styles","buildStyles","textColor","pathColor","trailColor","Number","isNaN","props","marginTop","display","width","children","description","x","toString","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.193f690a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport {\n  CircularProgressbar,\n  buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\n// import logo from './logo.jpg';\nimport './App.css';\n\nfunction App() {\n  const [totalUnpaids, setTotalUnpaids] = useState([])\n  const [totalPaids, setTotalPaids] = useState([])\n  const [pricesUSD, setPricesUSD] = useState([])\n  const [pricesEUR, setPricesEUR] = useState([])\n  const [times, setTimes] = useState([])\n\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n  const getData = async () => {\n    try {\n\n      const totalUnpaid = await axios.get(\"https://hiveon.net/api/v1/stats/miner/1ad68e074d71c8fc6abe15187173767101d4c26e/ETH/billing-acc\")\n      setTotalUnpaids(totalUnpaid.data.totalUnpaid);\n      setTotalPaids(totalUnpaid.data.totalPaid);\n\n      const priceUSD = await axios.get(\"https://api.ethereumdb.com/v1/ticker?pair=ETH-USD&range=1h\")\n      setPricesUSD(priceUSD.data.price);\n\n      const priceEUR = await axios.get(\"https://api.ethereumdb.com/v1/ticker?pair=ETH-EUR&range=1h\")\n      setPricesEUR(priceEUR.data.price);\n    \n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTime = async() => {try {\n    const newDate = await new Date(); \n    setTimes(`${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()} - ${((newDate.getHours() < 10)?\"0\":\"\") + newDate.getHours()}:${((newDate.getMinutes() < 10)?\"0\":\"\") + newDate.getMinutes()}:${((newDate.getSeconds() < 10)?\"0\":\"\") + newDate.getSeconds()}`);\n\n  } catch (err) {\n    console.error(err.message);\n  }}\n\n  useEffect(()=>{\n    getData()\n    getTime()\n\n    const interval1=setInterval(()=>{\n      getTime()\n    },1000)\n\n    const interval2=setInterval(()=>{\n      getData()\n      \n    },60000)   \n       \n    return()=>{clearInterval(interval1); clearInterval(interval2)}}, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 style={{color: \"#c1aea8\"}}>Mohamed HM</h1>\n        <div className=\"headshot App-logo\" style={{cursor:\"pointer\"}} onClick={()=>refreshPage()}></div>\n        <p style={{color: \"#c1aea8\"}}>{times}</p>\n        \n        <p style={{color: \"#c1aea8\"}}>\n          <span class=\"iconify\" data-icon=\"mdi:ethereum\" style={{paddingRight: 5, height: 14}}></span><span style={{color: \"#6ee49d\"}}>{numberWithCommas(parseFloat(pricesUSD).toFixed(2))}$</span> | <span style={{color: \"#d46565\"}}>{numberWithCommas(parseFloat(pricesUSD*180).toFixed(2))}</span> | <span style={{color: \"#e4d06e\"}}>{numberWithCommas(parseFloat(pricesEUR).toFixed(2))}€</span>\n        </p>\n\n        <Circle label=\"\">\n          <CircularProgressbar\n            value={(parseFloat(totalUnpaids*1000).toFixed(2))}\n            text={`${(parseFloat(totalUnpaids*1000).toFixed(2))}%`}\n            styles={buildStyles({\n              textColor: \"#d46565\",\n              pathColor: \"#941717\",\n              trailColor: \"#c1aea8\"\n            })}\n          />\n        </Circle>          \n\n        <p style={{color: \"#c1aea8\"}}>\n        <span class=\"iconify\" data-icon=\"clarity:resource-pool-solid\" style={{paddingRight: 5, height: 13}}></span>\n        <span style={{color: \"#6ee49d\"}}>{numberWithCommas(parseFloat(pricesUSD*totalUnpaids).toFixed(2))}$</span> | <span style={{color: \"#d46565\"}}>{numberWithCommas(parseFloat(pricesUSD*totalUnpaids*180).toFixed(2))}</span> | <span style={{color: \"#e4d06e\"}}>{numberWithCommas(parseFloat(pricesEUR*totalUnpaids).toFixed(2))}€</span>\n        </p>\n\n        {Number.isNaN(parseFloat(totalPaids))? \"\": <p style={{color: \"#c1aea8\"}}>\n          <span class=\"iconify\" data-icon=\"clarity:wallet-solid\" style={{paddingRight: 5, height: 13}}></span>\n          <span style={{color: \"#6ee49d\"}}>{numberWithCommas(parseFloat(pricesUSD*totalPaids).toFixed(2))}$</span> | <span style={{color: \"#d46565\"}}>{numberWithCommas(parseFloat(pricesUSD*totalPaids*180).toFixed(2))}</span> | <span style={{color: \"#e4d06e\"}}>{numberWithCommas(parseFloat(pricesEUR*totalPaids).toFixed(2))}€</span>\n        </p>}          \n\n      </header>\n      \n    </div>\n  );\n\n  function Circle(props) {\n    return (\n      <div style={{ marginTop: 20, display: \"block\", width: 100 }}>\n        <div style={{ height: \"30%\" }}>{props.children}</div>\n        <div style={{ height: \"70%\" }}>\n          <h3 className=\"h5\">{props.label}</h3>\n          <p>{props.description}</p>\n        </div>\n      </div>\n    );\n  }\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}